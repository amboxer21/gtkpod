TODO:

- customized export filenames (missing option in prefs, take care of
  charset issues)

- playlist creation for orphaned tracks (Sam?)

- reconstruction of iPod contents after file system corruption
  (Edward?)

- replacement of libid3 with libid3tag
    (reading "Country I" with 229 songs without duplicate recognition
     libid3tag: 74/63 sec (with display), 44 sec (without display)).

- volume normalization support (Edward)

- gtkpod-like browse of file system contents

- upload text notes to iPod

- for genre (etc.) playlists: have confirmation dialogue before
  removing old playlists (Chris Cutler?)

- currently iTunesDB.ext uses iPodIDs to match data between
  iTunesDB.ext and iTunesDB. If another program (like ephpod) writes
  the iTunesDB the iPodIDs change and data cannot be matched any
  more -> allow to match data using the MD5 checksums to partially
  recover the extended information

- add more progress dialogues

- play song and enqueue song should update playcount and last played
  song's field. (Should be done by some plugin that tells gtkpod when
  a song has been played -- using either filename or md5 checksum).

- add an option to let the user decide if all the gtkpod's
  playlist must be update on export.

Please feel free to submit further features.


BUGLIST:

- when updating songs the free space indicator gets smaller and
  smaller even if no new songs are added

- when updating songs (add a large directory with sub dirs
  recursively) at end a requester pops up saying that it updated far
  more songs than are actually in the directories

  -> that's because the dir contained playlist files. The tracks on
     the playlist files got added/updated several times.

- during a long operation (menues are blocked) the user can still edit
  the song data. This could potentially crash gtkpod -> need a way to
  block editing as well without blocking navigating.

- when copying songs to the iPod (export iTunesDB) and the iPod is
  overfilled, libgtk sometimes segfaults (TreeModel changed but did
  not notify TreeView?)

- fix memory holes during use of time_field_to_string() and co.

- when deleting an entry in a sort tab -> data is not marked as changed.

- when deleting an entry in a sort tab and the entry is currently in
  "edit mode" (i.e. the name could be changed by entering text), the
  entry is deleted, but the next entry is named according to the
  deleted entry. We had the same problem in the song view, but I think
  this got solved by explicetely deselecting the song before deleting
  it. Deselecting all in the sort tabs doesn't seem to (always) solve
  it -> some race condition? How can we avoid the context menu being
  called while editing the field???

- when deleting an entry in the last sort tab (of 2):

jcs@hatarakibachi:~/source/gtkpod/gtkpod$ 
(gtkpod:3842): Gdk-CRITICAL **: file gdkwindow-x11.c: line 1132 (gdk_window_hide): assertion `window != NULL' failed

(gtkpod:3842): Gtk-CRITICAL **: file gtkliststore.c: line 566 (gtk_list_store_get_value): assertion `GTK_LIST_STORE (tree_model)->stamp == iter->stamp' failed

(gtkpod:3842): GLib-GObject-WARNING **: gtype.c:2963: type id `0' is invalid

(gtkpod:3842): GLib-GObject-WARNING **: can't peek value table for type `<invalid>' which is not currently referenced

[3]+  Segmentation fault      src/gtkpod
------------------------
- when deleting the last entry in the last sort tab (of 2):

(gtkpod:5034): Gtk-CRITICAL **: file gtkliststore.c: line 566 (gtk_list_store_get_value): assertion `GTK_LIST_STORE (tree_model)->stamp == iter->stamp' failed

(gtkpod:5034): GLib-GObject-WARNING **: gtype.c:2963: type id `0' is invalid

(gtkpod:5034): GLib-GObject-WARNING **: can't peek value table for type `<invalid>' which is not currently referenced

[3]   Segmentation fault      src/gtkpod



Please add bugs as you find them.
